import Head from "next/head";
import Image from "next/image";
import "lightbox.js-react/dist/index.css";
import { useEffect } from "react";
import { SlideshowLightbox, initLightboxJS } from "lightbox.js-react";

interface Image {
  id: string;
  title: string;
  image: string;
  width: number;
  height: number;
}

export default function Home({ images }: { images: Image }) {
  useEffect(() => {
    initLightboxJS("CFC1-17A1-1CBD-0768", "Team & Company");
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <nav className=" w-screen h-32 bg-blue-600 text-white ">
          <div className="flex flex-col">
            <div className="text-5xl p-10 font-semibold">Guidon Archives</div>
          </div>
          <SlideshowLightbox
            lightboxIdentifier="lightbox1"
            framework="next"
            images={images}
          >
            {Object.values(images).map((image: Image) => (
              <div key={image.id}>
                <Image
                  src={image.image}
                  alt={image.title}
                  width={image.width / 2}
                  height={image.height / 2}
                  data-lightboxjs="lightbox1"
                />
                test
                {image.title}
              </div>
            ))}
          </SlideshowLightbox>
        </nav>
      </main>
    </>
  );
}

export async function getStaticProps() {
  const results = await fetch(
    `https://api.cloudinary.com/v1_1/${process.env.CLOUDINARY_CLOUD_NAME}/resources/image`,
    {
      headers: {
        Authorization: `Basic ${Buffer.from(
          process.env.CLOUDINARY_API_KEY +
            ":" +
            process.env.CLOUDINARY_API_SECRET
        ).toString("base64")}`,
      },
    }
  ).then((res) => res.json());

  const { resources } = results;

  const images: Image = resources.map((image: any) => {
    const { width, height } = image;
    return {
      id: image.asset_id,
      title: image.public_id,
      image: image.secure_url,
      width,
      height,
    };
  });

  return {
    props: { images },
  };
}
